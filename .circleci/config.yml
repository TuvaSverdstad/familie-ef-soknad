version: 2.1

executors:
  nais-deployer:
    environment:
      TEAM: teamfamilie
    docker:
      - image: navikt/deployment-cli:latest

jobs:
  build:
    docker:
      - image: circleci/node:11.7.0
    steps:
      - run:
          name: Add github to known hosts
          command: |
            mkdir ~/.ssh
            echo "github.com,140.82.118.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
      - add_ssh_keys:
          fingerprints:
            - "d4:c2:10:f7:91:30:c2:f0:55:93:8b:8f:b5:cd:6c:49"
      - checkout
      - run:
          name: Installer npm pakker
          command: |
            npm ci
      - run:
          name: Bygg React app
          command: |
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - build/*

  deploy-til-dev:
    docker:
      - image: navikt/deployment-cli:latest
    steps:
      - run:
            name: Add github to known hosts
            command: |
              mkdir ~/.ssh
              echo "github.com,140.82.118.3 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
      - add_ssh_keys:
          fingerprints:
            - "d4:c2:10:f7:91:30:c2:f0:55:93:8b:8f:b5:cd:6c:49"
      - checkout
      - sett-miljovariabler
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Bygger Docker image
          command: |
            echo $IMAGE_NAME
            docker build -t $IMAGE_NAME .
      - run:
          name: Pusher Docker image
          command: |
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push $IMAGE_NAME
      - deploy:
          til: dev-sbs
          ingress1: https://$REPO_NAME.nais.oera-q.local
          ingress2: https://www-q0.nav.no/familie/$REPO_NAME

commands:
  deploy:
    parameters:
      til:
        type: string
      ingress1:
        type: string
      ingress2:
        type: string
    steps:
      - run:
          name: Deployer til << parameters.til >>
          command: |
            echo $GH_DEPLOY_KEY | base64 -d | dos2unix > gh_deploy_key.pem
            deployment-cli deploy create \
                --team=teamfamilie \
                --resource=nais.config.yaml \
                --cluster=<< parameters.til >> \
                --repository=$CIRCLE_PROJECT_USERNAME/$REPO_NAME \
                --var reponame=$REPO_NAME \
                --var version=$IMAGE_VERSION \
                --appid=20250 \
                --key=gh_deploy_key.pem

  sett-miljovariabler:
    steps:
      - run:
          name:  Definerer git-referanse, versjonsnummer og repo-navn
          command: |
            echo "export COMMIT_SHORT='$(git rev-parse --short HEAD)'" >> $BASH_ENV
            echo "export IMAGE_VERSION='$CIRCLE_WORKFLOW_ID-${CIRCLE_BRANCH////-}$CIRCLE_TAG'" >> $BASH_ENV
            echo "export REPO_NAME='$CIRCLE_PROJECT_REPONAME'" >> $BASH_ENV
      - run:
          name: Definerer navn pÃ¥ docker-image
          command: |
            echo "export IMAGE_NAME='$CIRCLE_PROJECT_USERNAME/$REPO_NAME:$IMAGE_VERSION'" >> $BASH_ENV
workflows:
  bygg-og-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy-til-dev:
          name: automatisk-deploy-til-dev
          requires:
            - build
          context: familie-ci
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master